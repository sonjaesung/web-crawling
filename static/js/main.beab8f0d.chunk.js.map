{"version":3,"sources":["component/Search.js","App.js","index.js"],"names":["Search","useState","classList","setClassList","autoHeight","textEle","document","querySelector","style","height","scrollHeight","type","id","onClick","value","alert","window","location","onChange","e","preventDefault","target","files","length","f","reader","FileReader","onload","data","result","readedData","XLSX","classArray","i","SheetNames","wsname","ws","Sheets","dataParse","sheet_to_json","header","push","readAsBinaryString","undefined","classNo","div","innerText","table","createElement","noTh","nameTh","checkTh","padding","border","textAlign","append","tr","noTd","nameTd","checkTd","indexOf","color","onKeyDown","onKeyUp","width","minHeight","App","path","component","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.beab8f0d.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\nimport readXlsxFile from 'read-excel-file';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst Search = () => {\r\n\r\n    const [classList, setClassList] = useState();\r\n\r\n    const autoHeight = () => {\r\n        let textEle = document.querySelector('#searchText');\r\n        textEle.style.height = '1px';\r\n        textEle.style.height = (12 + textEle.scrollHeight) + 'px';\r\n    }\r\n\r\n    const searchName = () => {\r\n        if(classList === undefined)\r\n        {\r\n            alert('출석부 선택을 먼저 해주세요.');\r\n            return;\r\n        }\r\n\r\n        let classNo = document.querySelector(\"#classNo\");\r\n\r\n        if(classNo.value === \"\")\r\n        {\r\n            alert(\"반을 선택해 주세요.\")\r\n            return;\r\n        }\r\n\r\n        let textEle = document.querySelector('#searchText');\r\n        let div = document.querySelector('#checkDiv');\r\n\r\n        div.innerText = \"\";\r\n\r\n        let table = document.createElement('table');\r\n        let noTh = document.createElement('th');\r\n        let nameTh = document.createElement('th');\r\n        let checkTh = document.createElement('th');\r\n\r\n        noTh.innerText = \"번호\";\r\n        nameTh.innerText = \"이름\";\r\n        checkTh.innerText = \"출석\";\r\n\r\n        noTh.style.padding = \"10px\";\r\n        nameTh.style.padding = \"10px\";\r\n        checkTh.style.padding = \"10px\";\r\n\r\n        table.border = 1;\r\n        table.style.textAlign = \"center\";\r\n\r\n        table.append(noTh);\r\n        table.append(nameTh);\r\n        table.append(checkTh);\r\n        div.append(table);\r\n\r\n        for(let i=0; i<classList[classNo.value-1].length; i++)\r\n        {\r\n            let tr = document.createElement('tr');\r\n            let noTd = document.createElement('td');\r\n            let nameTd = document.createElement('td');\r\n            let checkTd = document.createElement('td');\r\n\r\n            noTd.innerText = classList[classNo.value-1][i][0];\r\n            nameTd.innerText = classList[classNo.value-1][i][1];\r\n\r\n            if (textEle.value.indexOf(classList[classNo.value-1][i][1]) != -1) {\r\n                checkTd.innerText = \"O\";\r\n                noTd.style.color = \"green\";\r\n                nameTd.style.color = \"green\";\r\n                checkTd.style.color = \"green\";\r\n            }\r\n            else {\r\n                checkTd.innerText = \"X\";\r\n                noTd.style.color = \"red\";\r\n                nameTd.style.color = \"red\";\r\n                checkTd.style.color = \"red\";\r\n            }\r\n\r\n            noTd.style.padding = \"10px\";\r\n            nameTd.style.padding = \"10px\";\r\n            checkTd.style.padding = \"10px\";\r\n\r\n            tr.append(noTd);\r\n            tr.append(nameTd);\r\n            tr.append(checkTd);\r\n            table.append(tr);\r\n        }\r\n    }\r\n\r\n    const checkClassNo = () => {\r\n        let classNo = document.querySelector(\"#classNo\");\r\n\r\n        if(classNo.value === \"\")\r\n        {\r\n            alert(\"반을 선택해 주세요.\");\r\n            window.location = '.';\r\n        }\r\n    }\r\n\r\n    const addClassList = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(e.target.files.length === 0)\r\n        {\r\n            return;\r\n        }\r\n        \r\n        let files = e.target.files, f = files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = function (e) {\r\n            let data = e.target.result;\r\n            let readedData = XLSX.read(data, {type: 'binary'});\r\n            let classArray = [];\r\n\r\n            for(let i=0; i<readedData.SheetNames.length; i++)\r\n            {\r\n                const wsname = readedData.SheetNames[i];\r\n                const ws = readedData.Sheets[wsname];\r\n        \r\n                /* Convert array to json*/\r\n                const dataParse = XLSX.utils.sheet_to_json(ws, {header:1});\r\n                classArray.push(dataParse);\r\n            }\r\n            setClassList(classArray);\r\n        };\r\n\r\n        reader.readAsBinaryString(f)\r\n\r\n        e.target.files = null;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <input type=\"number\" id=\"classNo\"></input>반 <br />\r\n            <input type=\"file\" id=\"fileInput\" onClick={checkClassNo} onChange={addClassList} />\r\n            <button onClick={searchName}>출석체크</button>\r\n            <div id=\"checkDiv\"></div>\r\n            <textarea id=\"searchText\" onKeyDown={autoHeight} onKeyUp={autoHeight} style={{width:'100%', minHeight:'400px'}}></textarea>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Fragment } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport Search from \"./component/Search\";\n\nconst App = () => {\n\n    return (\n        <Fragment>\n            <HashRouter>\n                <Route path=\"/\" component={Search} exact={true} />\n            </HashRouter>\n        </Fragment>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}