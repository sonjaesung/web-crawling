{"version":3,"sources":["component/Head.js","component/Search.js","App.js","index.js"],"names":["Head","className","Search","useState","classList","setClassList","autoHeight","textEle","document","querySelector","style","height","scrollHeight","type","id","readOnly","htmlFor","onChange","e","preventDefault","target","files","length","value","name","f","reader","FileReader","onload","data","result","readedData","XLSX","classArray","i","SheetNames","wsname","ws","Sheets","dataParse","sheet_to_json","header","push","readAsBinaryString","onClick","undefined","classNo","alert","div","innerText","table","createElement","noTh","nameTh","checkTh","padding","border","textAlign","append","tr","noTd","nameTd","checkTd","indexOf","color","onKeyDown","onKeyUp","width","minHeight","App","path","component","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2dde724a.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\nimport \"../css/Head.css\";\r\n\r\nconst Head = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"headDiv\">\r\n                <span className=\"headTitle\">학생 출석체크</span>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Head;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport Head from \"./Head\";\r\n\r\nimport \"../css/Search.css\";\r\n\r\nconst Search = () => {\r\n    const [classList, setClassList] = useState();\r\n\r\n    const autoHeight = () => {\r\n        let textEle = document.querySelector(\"#searchText\");\r\n        textEle.style.height = \"1px\";\r\n        textEle.style.height = 12 + textEle.scrollHeight + \"px\";\r\n    };\r\n\r\n    const searchName = () => {\r\n        if (classList === undefined) {\r\n            alert(\"출석부 선택을 먼저 해주세요.\");\r\n            return;\r\n        }\r\n\r\n        let classNo = document.querySelector(\"#classNo\");\r\n\r\n        if (classNo.value === \"\") {\r\n            alert(\"반을 선택해 주세요.\");\r\n            return;\r\n        }\r\n\r\n        if (classList.length < classNo.value || classNo.value < 1) {\r\n            alert(\"존재하지 않는 반입니다.\");\r\n            return;\r\n        }\r\n\r\n        let textEle = document.querySelector(\"#searchText\");\r\n        let div = document.querySelector(\"#checkDiv\");\r\n\r\n        div.innerText = \"\";\r\n\r\n        let table = document.createElement(\"table\");\r\n        let noTh = document.createElement(\"th\");\r\n        let nameTh = document.createElement(\"th\");\r\n        let checkTh = document.createElement(\"th\");\r\n\r\n        noTh.innerText = \"번호\";\r\n        nameTh.innerText = \"이름\";\r\n        checkTh.innerText = \"출석\";\r\n\r\n        noTh.style.padding = \"10px\";\r\n        nameTh.style.padding = \"10px\";\r\n        checkTh.style.padding = \"10px\";\r\n\r\n        table.border = 1;\r\n        table.style.textAlign = \"center\";\r\n\r\n        table.append(noTh);\r\n        table.append(nameTh);\r\n        table.append(checkTh);\r\n        div.append(table);\r\n\r\n        for (let i = 0; i < classList[classNo.value - 1].length; i++) {\r\n            let tr = document.createElement(\"tr\");\r\n            let noTd = document.createElement(\"td\");\r\n            let nameTd = document.createElement(\"td\");\r\n            let checkTd = document.createElement(\"td\");\r\n\r\n            noTd.innerText = classList[classNo.value - 1][i][0];\r\n            nameTd.innerText = classList[classNo.value - 1][i][1];\r\n\r\n            if (textEle.value.indexOf(classList[classNo.value - 1][i][1]) != -1) {\r\n                checkTd.innerText = \"O\";\r\n                noTd.style.color = \"green\";\r\n                nameTd.style.color = \"green\";\r\n                checkTd.style.color = \"green\";\r\n            } else {\r\n                checkTd.innerText = \"X\";\r\n                noTd.style.color = \"red\";\r\n                nameTd.style.color = \"red\";\r\n                checkTd.style.color = \"red\";\r\n            }\r\n\r\n            noTd.style.padding = \"10px\";\r\n            nameTd.style.padding = \"10px\";\r\n            checkTd.style.padding = \"10px\";\r\n\r\n            tr.append(noTd);\r\n            tr.append(nameTd);\r\n            tr.append(checkTd);\r\n            table.append(tr);\r\n        }\r\n    };\r\n\r\n    const addClassList = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (e.target.files.length === 0) {\r\n            return;\r\n        }\r\n\r\n        let fileNameInput = document.querySelector(\"#fileNameInput\");\r\n        fileNameInput.value = e.target.files[0].name;\r\n\r\n        let files = e.target.files;\r\n        let f = files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onload = function (e) {\r\n            let data = e.target.result;\r\n            let readedData = XLSX.read(data, { type: \"binary\" });\r\n            let classArray = [];\r\n\r\n            for (let i = 0; i < readedData.SheetNames.length; i++) {\r\n                const wsname = readedData.SheetNames[i];\r\n                const ws = readedData.Sheets[wsname];\r\n\r\n                /* Convert array to json*/\r\n                const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n                classArray.push(dataParse);\r\n            }\r\n            setClassList(classArray);\r\n        };\r\n\r\n        reader.readAsBinaryString(f);\r\n\r\n        e.target.files = null;\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <Head />\r\n            <div className=\"middleDiv\">\r\n                <div>\r\n                    <span className=\"classListSpan\">출석부 엑셀을 첨부하세요</span>\r\n                    <br></br>\r\n                    <input type=\"text\" className=\"fileNameInput\" id=\"fileNameInput\" readOnly></input>\r\n                    <label htmlFor=\"fileInput\">업로드</label>\r\n                    <input type=\"file\" id=\"fileInput\" onChange={addClassList} />\r\n                </div>\r\n                <div className=\"classDiv\">\r\n                    <span className=\"classSpan\">반을 입력하세요 (숫자만 ex: 1)</span>\r\n                    <br></br>\r\n                    <input type=\"number\" id=\"classNo\" className=\"classNo\"></input>\r\n                </div>\r\n                <button className=\"searchBtn\" onClick={searchName}>\r\n                    출석체크\r\n                </button>\r\n            </div>\r\n            <div className=\"searchDiv\">\r\n                <div id=\"checkDiv\"></div>\r\n                <textarea\r\n                    id=\"searchText\"\r\n                    onKeyDown={autoHeight}\r\n                    onKeyUp={autoHeight}\r\n                    style={{ width: \"100%\", minHeight: \"400px\" }}\r\n                ></textarea>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <span>작성자 : 손재성</span>\r\n                <br></br>\r\n                <span>문의 및 오류 메일 : loki92@naver.com</span>\r\n                <br></br>\r\n                <span>문의 및 오류 연락처 : 010-2689-2631</span>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Fragment } from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n\r\nimport Search from \"./component/Search\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <HashRouter>\r\n                <Route path=\"/\" component={Search} exact={true} />\r\n            </HashRouter>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}